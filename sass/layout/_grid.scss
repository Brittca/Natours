.row {
	max-width: $grid-width;
	background-color: #eee;
	margin: 0 auto;
	

	&:not(:last-child) {
		margin-bottom: $gutter-vertical;
	}
	
	@include clearfix;

	[class^="col-"] {
		background-color: #AE86C7;
		float: left;
		// padding: 1rem; add padding to make thicker!
		// color: #FFF; changed colour to make it pretty

		&:not(:last-child) {
			margin-right: $gutter-horizontal;
	}
}

	// selects all the class elements that start with col- use special symbol ^
	// * symbol will tell you to select any class that CONTAINS col. 
	// $ symbol will tell you to select any class that ENDS in col



	.col-1-of-2 {
		width: calc((100% - #{$gutter-horizontal}) / 2);
	}

	.col-1-of-3 {
		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
	}

	.col-2-of-3 {
		width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
	}

	.col-1-of-4 {
		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
	}

	.col-2-of-4 {
		width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
	}

	.col-3-of-4 {
		width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
	}
}


// for calculatons above, the first numbers are the number of GUTTERS, 
// the last number is how many COLUMNS


//.row:last-child(); 'not' selects everything except the last child. Pseudo class

// the grid will not go over 1140 px or 114 rem 
		// if the viewport is smaller than this value, it will fill responsively. 

			// margin on the top and bottom is ZERO and left and right is AUTO ******
	// the browser when rendering the page will automatically figure out the margin

	// calc(); operation allows you to mix units of measure

	// .row::after {
	// } 